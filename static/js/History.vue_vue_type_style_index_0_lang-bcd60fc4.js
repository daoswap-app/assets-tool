import{t as s}from"./___vite-browser-external_commonjs-proxy-76af39aa.js";import{M as j,g as ot,E as st,a as R,w as F,T as lt}from"./web3-c635b06a.js";import{E as rt}from"./ERC20_abi-801f43f8.js";import{I as z,p as ct,c as J}from"./index-a1cfde47.js";import{g as it,h as ut}from"./index-a9568fb4.js";import{x as Q,r as g,o as dt,a7 as y,aa as mt,y as i,z as K,J as _t,H as d,I as o,P as N,A as u,O as a,u as l,F as ft,a0 as pt,L as v,M as m}from"./runtime-core.esm-bundler-c80a0204.js";const vt={style:{"word-wrap":"break-word"}},wt={class:"block"},yt={style:{"word-wrap":"break-word"}},ht={style:{"word-wrap":"break-word"}},kt={style:{display:"flex","align-items":"left"}},bt={style:{display:"flex","align-items":"left"}},gt={style:{"margin-left":"3px"}},Nt={style:{display:"flex","align-items":"left"}},Tt=Q({name:"TransactionsHistory"}),Dt=Q({...Tt,props:{connectedWallet:{type:Object,default:null},web3:{type:Object,default:null},currentWallet:{type:String,default:""}},setup(q){const n=q,G=new z(rt),U=new z(j),B=g(!1),I=g([]),E=g(null),S=g(0),O=g(0),M=g(0),X=async()=>{B.value=!0;const _=ot(j,n.currentWallet,n.web3);S.value=st[n.connectedWallet.chainId],O.value=await n.web3.eth.getBlockNumber(),M.value=Math.ceil((O.value-S.value)/R),I.value=[];const P=await _.methods.getTransactionIds(1).call(),D=await _.methods.getTransactionIds(2).call(),W=P.concat(D).map(async p=>{const r=await _.methods.getTransaction(p).call(),h=await _.methods.getTransactionConfirmationStatus(p,n.connectedWallet.address).call(),x=await n.web3.eth.getChainId();E.value=it(ut(parseInt(x)));let T=1,e="",t="",C=r.to,H=null,V=null;if(r.to.toLowerCase()===n.currentWallet.toLowerCase()){T=2;const c=r.data?U.decodeData(r.data):null;c&&(e=c.method)}else{T=1;const c=r.data?G.decodeData(r.data):null;if(t=E.value.token,H=F(r.value,n.web3),c){const w=lt[x].filter(k=>k.token.toLowerCase()===r.to.toLowerCase());e=c.method,t=w.length>0?w[0].symbol:E.value.token,C=c.inputs[0],H=F(new n.web3.utils.toBN(c.inputs[1].toString()),n.web3),V={to:c.inputs[0],value:F(new n.web3.utils.toBN(c.inputs[1].toString()),n.web3)}}}const L={id:p,destination:C,tokenSymbol:t,value:H,data:V,confirmations:r.confirmations,revokes:r.revokes,executeState:r.state,confirmStatus:h,type:T,methodName:e,events:[]};for(let c=0;c<M.value;c++){const w=S.value+R*c,k=w+(R-1),Y=await _.getPastEvents("TransactionCreated",{filter:{transactionId:p},fromBlock:w,toBlock:k}),Z=await _.getPastEvents("TransactionConfirmed",{filter:{transactionId:p},fromBlock:w,toBlock:k}),$=await _.getPastEvents("TransactionRevoke",{filter:{transactionId:p},fromBlock:w,toBlock:k}),tt=await _.getPastEvents("TransactionExecuted",{filter:{transactionId:p},fromBlock:w,toBlock:k}),A=Y.concat(Z,$,tt);if(A.length>0){const et=A.map(async b=>{const at=await n.web3.eth.getTransaction(b.transactionHash),nt={eventName:b.event,...b.returnValues,transactionHash:b.transactionHash,blockNumber:b.blockNumber,from:at.from,createTime:ct(b.returnValues.createTime)};L.events.push(nt)});await Promise.all(et),L.events.sort(J("blockNumber"))}}I.value.push(L)});await Promise.all(W),I.value.sort(J("id")),B.value=!1};return dt(()=>{n.connectedWallet&&n.web3&&n.currentWallet&&X()}),(_,P)=>{const D=y("el-divider"),f=y("el-tag"),W=y("el-card"),p=y("el-timeline-item"),r=y("el-timeline"),h=y("el-table-column"),x=y("el-table"),T=mt("loading");return i(),K("div",null,[_t((i(),d(x,{data:I.value,style:{width:"100%"}},{default:o(()=>[N(h,{type:"expand"},{default:o(e=>[u("p",vt,a(l(s)("transaction.destination"))+": "+a(e.row.destination),1),N(D),u("div",wt,[e.row.events.length>0?(i(),d(r,{key:0},{default:o(()=>[(i(!0),K(ft,null,pt(e.row.events,(t,C)=>(i(),d(p,{key:C,timestamp:t.createTime,placement:"top"},{default:o(()=>[N(W,null,{default:o(()=>[u("h4",null,[m(a(l(s)("transaction.eventName"))+": ",1),t.eventName=="TransactionCreated"?(i(),d(f,{key:0,type:"warning"},{default:o(()=>[m(a(t.eventName?l(s)("transaction."+t.eventName):""),1)]),_:2},1024)):v("",!0),t.eventName=="TransactionConfirmed"?(i(),d(f,{key:1,type:"success"},{default:o(()=>[m(a(t.eventName?l(s)("transaction."+t.eventName):""),1)]),_:2},1024)):v("",!0),t.eventName=="TransactionRevoke"?(i(),d(f,{key:2,type:"danger"},{default:o(()=>[m(a(t.eventName?l(s)("transaction."+t.eventName):""),1)]),_:2},1024)):v("",!0),t.eventName=="TransactionExecuted"?(i(),d(f,{key:3},{default:o(()=>[m(a(t.eventName?l(s)("transaction."+t.eventName):""),1)]),_:2},1024)):v("",!0)]),u("p",yt,[m(a(l(s)("transaction.eventFrom"))+": ",1),u("span",null,a(t.from),1)]),u("p",ht,[m(a(l(s)("transaction.eventTransactionHash"))+": ",1),u("span",null,a(t.transactionHash),1)])]),_:2},1024)]),_:2},1032,["timestamp"]))),128))]),_:2},1024)):v("",!0)])]),_:1}),N(h,{label:l(s)("transaction.type")},{default:o(e=>[u("div",kt,[e.row.type==1?(i(),d(f,{key:0,type:"success"},{default:o(()=>[m(a(l(s)("transaction."+e.row.methodName)),1)]),_:2},1024)):v("",!0),e.row.type==2?(i(),d(f,{key:1,type:"warning"},{default:o(()=>[m(a(l(s)("transaction."+e.row.methodName)),1)]),_:2},1024)):v("",!0)])]),_:1},8,["label"]),N(h,{label:l(s)("transaction.value")},{default:o(e=>[u("div",bt,[u("span",null,a(e.row.value),1),u("span",gt,a(e.row.tokenSymbol),1)])]),_:1},8,["label"]),N(h,{label:l(s)("transaction.status")},{default:o(e=>[u("div",Nt,[e.row.executeState==1?(i(),d(f,{key:0,type:"success"},{default:o(()=>[m(a(l(s)("transaction.statusSuccess")),1)]),_:1})):v("",!0),e.row.executeState==2?(i(),d(f,{key:1,type:"danger"},{default:o(()=>[m(a(l(s)("transaction.statusRevoke")),1)]),_:1})):v("",!0)])]),_:1},8,["label"])]),_:1},8,["data"])),[[T,B.value]])])}}});export{Dt as _};
