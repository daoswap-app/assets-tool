import{a as H,c as ue}from"./__vite-browser-external-c2c4480c.js";import{L as V,v as N0,B as ae,h as Re,a as W0,b as B,c as V0,t as xe,d as L,e as ne,H as J0,f as g0,g as ze,U as Be,_ as c0,j as q0,k as Z0,l as Q0,m as X0,n as Y0,o as oe,p as y0,q as et,r as tt,s as xt,u as at,T as je,w as rt,x as ct,y as nt,z as _e,A as p0,C as be,D as ft,S as Ge,E as R,F as Pe,G as Je,I as pe,J as S0,K as se,M as w0,N as dt,O as it,P as $e,Q as ot,R as bt,V as st,W as ut,X as lt,Y as ht,Z as mt,$ as n0,a0 as f0,a1 as v0,a2 as gt,a3 as yt,a4 as pt}from"./index-aa19b975.js";var St={};const Z=new V(N0),Ce={},P0=ae.from(0),C0=ae.from(-1);function E0(e,t,x,a){const r={fault:t,operation:x};return a!==void 0&&(r.value=a),Z.throwError(e,V.errors.NUMERIC_FAULT,r)}let Ee="0";for(;Ee.length<256;)Ee+=Ee;function qe(e){if(typeof e!="number")try{e=ae.from(e).toNumber()}catch{}return typeof e=="number"&&e>=0&&e<=256&&!(e%1)?"1"+Ee.substring(0,e):Z.throwArgumentError("invalid decimal size","decimals",e)}function De(e,t){t==null&&(t=0);const x=qe(t);e=ae.from(e);const a=e.lt(P0);a&&(e=e.mul(C0));let r=e.mod(x).toString();for(;r.length<x.length-1;)r="0"+r;r=r.match(/^([0-9]*[1-9]|0)(0*)/)[1];const i=e.div(x).toString();return x.length===1?e=i:e=i+"."+r,a&&(e="-"+e),e}function re(e,t){t==null&&(t=0);const x=qe(t);(typeof e!="string"||!e.match(/^-?[0-9.]+$/))&&Z.throwArgumentError("invalid decimal value","value",e);const a=e.substring(0,1)==="-";a&&(e=e.substring(1)),e==="."&&Z.throwArgumentError("missing value","value",e);const r=e.split(".");r.length>2&&Z.throwArgumentError("too many decimal points","value",e);let i=r[0],b=r[1];for(i||(i="0"),b||(b="0");b[b.length-1]==="0";)b=b.substring(0,b.length-1);for(b.length>x.length-1&&E0("fractional component exceeds decimals","underflow","parseFixed"),b===""&&(b="0");b.length<x.length-1;)b+="0";const s=ae.from(i),g=ae.from(b);let p=s.mul(x).add(g);return a&&(p=p.mul(C0)),p}class Se{constructor(t,x,a,r){t!==Ce&&Z.throwError("cannot use FixedFormat constructor; use FixedFormat.from",V.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.signed=x,this.width=a,this.decimals=r,this.name=(x?"":"u")+"fixed"+String(a)+"x"+String(r),this._multiplier=qe(r),Object.freeze(this)}static from(t){if(t instanceof Se)return t;typeof t=="number"&&(t=`fixed128x${t}`);let x=!0,a=128,r=18;if(typeof t=="string"){if(t!=="fixed")if(t==="ufixed")x=!1;else{const i=t.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);i||Z.throwArgumentError("invalid fixed format","format",t),x=i[1]!=="u",a=parseInt(i[2]),r=parseInt(i[3])}}else if(t){const i=(b,s,g)=>t[b]==null?g:(typeof t[b]!==s&&Z.throwArgumentError("invalid fixed format ("+b+" not "+s+")","format."+b,t[b]),t[b]);x=i("signed","boolean",x),a=i("width","number",a),r=i("decimals","number",r)}return a%8&&Z.throwArgumentError("invalid fixed format width (not byte aligned)","format.width",a),r>80&&Z.throwArgumentError("invalid fixed format (decimals too large)","format.decimals",r),new Se(Ce,x,a,r)}}class W{constructor(t,x,a,r){t!==Ce&&Z.throwError("cannot use FixedNumber constructor; use FixedNumber.from",V.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.format=r,this._hex=x,this._value=a,this._isFixedNumber=!0,Object.freeze(this)}_checkFormat(t){this.format.name!==t.format.name&&Z.throwArgumentError("incompatible format; use fixedNumber.toFormat","other",t)}addUnsafe(t){this._checkFormat(t);const x=re(this._value,this.format.decimals),a=re(t._value,t.format.decimals);return W.fromValue(x.add(a),this.format.decimals,this.format)}subUnsafe(t){this._checkFormat(t);const x=re(this._value,this.format.decimals),a=re(t._value,t.format.decimals);return W.fromValue(x.sub(a),this.format.decimals,this.format)}mulUnsafe(t){this._checkFormat(t);const x=re(this._value,this.format.decimals),a=re(t._value,t.format.decimals);return W.fromValue(x.mul(a).div(this.format._multiplier),this.format.decimals,this.format)}divUnsafe(t){this._checkFormat(t);const x=re(this._value,this.format.decimals),a=re(t._value,t.format.decimals);return W.fromValue(x.mul(this.format._multiplier).div(a),this.format.decimals,this.format)}floor(){const t=this.toString().split(".");t.length===1&&t.push("0");let x=W.from(t[0],this.format);const a=!t[1].match(/^(0*)$/);return this.isNegative()&&a&&(x=x.subUnsafe(d0.toFormat(x.format))),x}ceiling(){const t=this.toString().split(".");t.length===1&&t.push("0");let x=W.from(t[0],this.format);const a=!t[1].match(/^(0*)$/);return!this.isNegative()&&a&&(x=x.addUnsafe(d0.toFormat(x.format))),x}round(t){t==null&&(t=0);const x=this.toString().split(".");if(x.length===1&&x.push("0"),(t<0||t>80||t%1)&&Z.throwArgumentError("invalid decimal count","decimals",t),x[1].length<=t)return this;const a=W.from("1"+Ee.substring(0,t),this.format),r=wt.toFormat(this.format);return this.mulUnsafe(a).addUnsafe(r).floor().divUnsafe(a)}isZero(){return this._value==="0.0"||this._value==="0"}isNegative(){return this._value[0]==="-"}toString(){return this._value}toHexString(t){if(t==null)return this._hex;t%8&&Z.throwArgumentError("invalid byte width","width",t);const x=ae.from(this._hex).fromTwos(this.format.width).toTwos(t).toHexString();return Re(x,t/8)}toUnsafeFloat(){return parseFloat(this.toString())}toFormat(t){return W.fromString(this._value,t)}static fromValue(t,x,a){return a==null&&x!=null&&!W0(x)&&(a=x,x=null),x==null&&(x=0),a==null&&(a="fixed"),W.fromString(De(t,x),Se.from(a))}static fromString(t,x){x==null&&(x="fixed");const a=Se.from(x),r=re(t,a.decimals);!a.signed&&r.lt(P0)&&E0("unsigned value cannot be negative","overflow","value",t);let i=null;a.signed?i=r.toTwos(a.width).toHexString():(i=r.toHexString(),i=Re(i,a.width/8));const b=De(r,a.decimals);return new W(Ce,i,b,a)}static fromBytes(t,x){x==null&&(x="fixed");const a=Se.from(x);if(B(t).length>a.width/8)throw new Error("overflow");let r=ae.from(t);a.signed&&(r=r.fromTwos(a.width));const i=r.toTwos((a.signed?0:1)+a.width).toHexString(),b=De(r,a.decimals);return new W(Ce,i,b,a)}static from(t,x){if(typeof t=="string")return W.fromString(t,x);if(V0(t))return W.fromBytes(t,x);try{return W.fromValue(t,0,x)}catch(a){if(a.code!==V.errors.INVALID_ARGUMENT)throw a}return Z.throwArgumentError("invalid FixedNumber value","value",t)}static isFixedNumber(t){return!!(t&&t._isFixedNumber)}}const d0=W.from(1),wt=W.from("0.5");function vt(e){const t=xe(e);if(t.length>31)throw new Error("bytes32 string must be less than 32 bytes");return L(ne([t,J0]).slice(0,32))}function Pt(e){const t=B(e);if(t.length!==32)throw new Error("invalid bytes32 - not 32 bytes long");if(t[31]!==0)throw new Error("invalid bytes32 string - no null terminator");let x=31;for(;t[x-1]===0;)x--;return g0(t.slice(0,x))}function Ct(e){if(e.length%4!==0)throw new Error("bad data");let t=[];for(let x=0;x<e.length;x+=4)t.push(parseInt(e.substring(x,x+4),16));return t}function Ze(e,t){t||(t=function(r){return[parseInt(r,16)]});let x=0,a={};return e.split(",").forEach(r=>{let i=r.split(":");x+=parseInt(i[0],16),a[x]=t(i[1])}),a}function A0(e){let t=0;return e.split(",").map(x=>{let a=x.split("-");a.length===1?a[1]="0":a[1]===""&&(a[1]="1");let r=t+parseInt(a[0],16);return t=parseInt(a[1],16),{l:r,h:t}})}function Qe(e,t){let x=0;for(let a=0;a<t.length;a++){let r=t[a];if(x+=r.l,e>=x&&e<=x+r.h&&(e-x)%(r.d||1)===0){if(r.e&&r.e.indexOf(e-x)!==-1)continue;return r}}return null}const Et=A0("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"),At="ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map(e=>parseInt(e,16)),Bt=[{h:25,s:32,l:65},{h:30,s:32,e:[23],l:127},{h:54,s:1,e:[48],l:64,d:2},{h:14,s:1,l:57,d:2},{h:44,s:1,l:17,d:2},{h:10,s:1,e:[2,6,8],l:61,d:2},{h:16,s:1,l:68,d:2},{h:84,s:1,e:[18,24,66],l:19,d:2},{h:26,s:32,e:[17],l:435},{h:22,s:1,l:71,d:2},{h:15,s:80,l:40},{h:31,s:32,l:16},{h:32,s:1,l:80,d:2},{h:52,s:1,l:42,d:2},{h:12,s:1,l:55,d:2},{h:40,s:1,e:[38],l:15,d:2},{h:14,s:1,l:48,d:2},{h:37,s:48,l:49},{h:148,s:1,l:6351,d:2},{h:88,s:1,l:160,d:2},{h:15,s:16,l:704},{h:25,s:26,l:854},{h:25,s:32,l:55915},{h:37,s:40,l:1247},{h:25,s:-119711,l:53248},{h:25,s:-119763,l:52},{h:25,s:-119815,l:52},{h:25,s:-119867,e:[1,4,5,7,8,11,12,17],l:52},{h:25,s:-119919,l:52},{h:24,s:-119971,e:[2,7,8,17],l:52},{h:24,s:-120023,e:[2,7,13,15,16,17],l:52},{h:25,s:-120075,l:52},{h:25,s:-120127,l:52},{h:25,s:-120179,l:52},{h:25,s:-120231,l:52},{h:25,s:-120283,l:52},{h:25,s:-120335,l:52},{h:24,s:-119543,e:[17],l:56},{h:24,s:-119601,e:[17],l:58},{h:24,s:-119659,e:[17],l:58},{h:24,s:-119717,e:[17],l:58},{h:24,s:-119775,e:[17],l:58}],_t=Ze("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"),Ft=Ze("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"),Ot=Ze("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D",Ct),Tt=A0("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");function kt(e){return e.reduce((t,x)=>(x.forEach(a=>{t.push(a)}),t),[])}function Dt(e){return!!Qe(e,Et)}function Mt(e){let t=Qe(e,Bt);if(t)return[e+t.s];let x=_t[e];if(x)return x;let a=Ft[e];if(a)return[e+a[0]];let r=Ot[e];return r||null}function Rt(e){return!!Qe(e,Tt)}function jt(e){if(e.match(/^[a-z0-9-]*$/i)&&e.length<=59)return e.toLowerCase();let t=ze(e);t=kt(t.map(a=>{if(At.indexOf(a)>=0)return[];if(a>=65024&&a<=65039)return[];let r=Mt(a);return r||[a]})),t=ze(c0(t),Be.NFKC),t.forEach(a=>{if(Rt(a))throw new Error("STRINGPREP_CONTAINS_PROHIBITED")}),t.forEach(a=>{if(Dt(a))throw new Error("STRINGPREP_CONTAINS_UNASSIGNED")});let x=c0(t);if(x.substring(0,1)==="-"||x.substring(2,4)==="--"||x.substring(x.length-1)==="-")throw new Error("invalid hyphen");return x}const It=Object.freeze(Object.defineProperty({__proto__:null,_toEscapedUtf8String:q0,toUtf8Bytes:xe,toUtf8CodePoints:ze,toUtf8String:g0,Utf8ErrorFuncs:Z0,get Utf8ErrorReason(){return Q0},get UnicodeNormalizationForm(){return Be},formatBytes32String:vt,parseBytes32String:Pt,nameprep:jt},Symbol.toStringTag,{value:"Module"})),Ut=Object.freeze(Object.defineProperty({__proto__:null,decode:X0,encode:Y0},Symbol.toStringTag,{value:"Module"})),B0=`Ethereum Signed Message:
`;function Xe(e){return typeof e=="string"&&(e=xe(e)),oe(ne([xe(B0),xe(String(e.length)),e]))}const Kt=Object.freeze(Object.defineProperty({__proto__:null,id:y0,dnsEncode:et,namehash:tt,isValidName:xt,ensNormalize:at,messagePrefix:B0,hashMessage:Xe,_TypedDataEncoder:je},Symbol.toStringTag,{value:"Module"})),Lt=H(rt),$t=H(Ut),zt=H(ct),Gt=H(nt),Ht=H(Kt),Nt=Object.freeze(Object.defineProperty({__proto__:null,computeHmac:_e,ripemd160:p0,sha256:be,sha512:ft,get SupportedAlgorithm(){return Ge}},Symbol.toStringTag,{value:"Module"}));function Ye(e,t,x,a,r){e=B(e),t=B(t);let i,b=1;const s=new Uint8Array(a),g=new Uint8Array(t.length+4);g.set(t);let p,y;for(let P=1;P<=b;P++){g[t.length]=P>>24&255,g[t.length+1]=P>>16&255,g[t.length+2]=P>>8&255,g[t.length+3]=P&255;let E=B(_e(r,e,g));i||(i=E.length,y=new Uint8Array(i),b=Math.ceil(a/i),p=a-(b-1)*i),y.set(E);for(let l=1;l<x;l++){E=B(_e(r,e,E));for(let n=0;n<i;n++)y[n]^=E[n]}const $=(P-1)*i,J=P===b?p:i;s.set(B(y).slice(0,J),$)}return L(s)}const Wt="wordlists/5.7.0",Vt=new V(Wt);class Oe{constructor(t){Vt.checkAbstract(new.target,Oe),R(this,"locale",t)}split(t){return t.toLowerCase().split(/ +/g)}join(t){return t.join(" ")}static check(t){const x=[];for(let a=0;a<2048;a++){const r=t.getWord(a);if(a!==t.getWordIndex(r))return"0x";x.push(r)}return y0(x.join(`
`)+`
`)}static register(t,x){x||(x=t.locale)}}const Jt="AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo";let Ae=null;function i0(e){if(Ae==null&&(Ae=Jt.replace(/([A-Z])/g," $1").toLowerCase().substring(1).split(" "),Oe.check(e)!=="0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60"))throw Ae=null,new Error("BIP39 Wordlist for en (English) FAILED")}class qt extends Oe{constructor(){super("en")}getWord(t){return i0(this),Ae[t]}getWordIndex(t){return i0(this),Ae.indexOf(t)}}const _0=new qt;Oe.register(_0);const o0={en:_0},Zt="hdnode/5.7.0",Fe=new V(Zt),Qt=ae.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),Xt=xe("Bitcoin seed"),me=2147483648;function F0(e){return(1<<e)-1<<8-e}function Yt(e){return(1<<e)-1}function ke(e){return Re(L(e),32)}function b0(e){return S0.encode(ne([e,Je(be(be(e)),0,4)]))}function e0(e){if(e==null)return o0.en;if(typeof e=="string"){const t=o0[e];return t==null&&Fe.throwArgumentError("unknown locale","wordlist",e),t}return e}const le={},we="m/44'/60'/0'/0/0";class ee{constructor(t,x,a,r,i,b,s,g){if(t!==le)throw new Error("HDNode constructor cannot be called directly");if(x){const p=new Pe(x);R(this,"privateKey",p.privateKey),R(this,"publicKey",p.compressedPublicKey)}else R(this,"privateKey",null),R(this,"publicKey",L(a));R(this,"parentFingerprint",r),R(this,"fingerprint",Je(p0(be(this.publicKey)),0,4)),R(this,"address",pe(this.publicKey)),R(this,"chainCode",i),R(this,"index",b),R(this,"depth",s),g==null?(R(this,"mnemonic",null),R(this,"path",null)):typeof g=="string"?(R(this,"mnemonic",null),R(this,"path",g)):(R(this,"mnemonic",g),R(this,"path",g.path))}get extendedKey(){if(this.depth>=256)throw new Error("Depth too large!");return b0(ne([this.privateKey!=null?"0x0488ADE4":"0x0488B21E",L(this.depth),this.parentFingerprint,Re(L(this.index),4),this.chainCode,this.privateKey!=null?ne(["0x00",this.privateKey]):this.publicKey]))}neuter(){return new ee(le,null,this.publicKey,this.parentFingerprint,this.chainCode,this.index,this.depth,this.path)}_derive(t){if(t>4294967295)throw new Error("invalid index - "+String(t));let x=this.path;x&&(x+="/"+(t&~me));const a=new Uint8Array(37);if(t&me){if(!this.privateKey)throw new Error("cannot derive child of neutered node");a.set(B(this.privateKey),1),x&&(x+="'")}else a.set(B(this.publicKey));for(let P=24;P>=0;P-=8)a[33+(P>>3)]=t>>24-P&255;const r=B(_e(Ge.sha512,this.chainCode,a)),i=r.slice(0,32),b=r.slice(32);let s=null,g=null;this.privateKey?s=ke(ae.from(i).add(this.privateKey).mod(Qt)):g=new Pe(L(i))._addPoint(this.publicKey);let p=x;const y=this.mnemonic;return y&&(p=Object.freeze({phrase:y.phrase,path:x,locale:y.locale||"en"})),new ee(le,s,g,this.fingerprint,ke(b),t,this.depth+1,p)}derivePath(t){const x=t.split("/");if(x.length===0||x[0]==="m"&&this.depth!==0)throw new Error("invalid path - "+t);x[0]==="m"&&x.shift();let a=this;for(let r=0;r<x.length;r++){const i=x[r];if(i.match(/^[0-9]+'$/)){const b=parseInt(i.substring(0,i.length-1));if(b>=me)throw new Error("invalid path index - "+i);a=a._derive(me+b)}else if(i.match(/^[0-9]+$/)){const b=parseInt(i);if(b>=me)throw new Error("invalid path index - "+i);a=a._derive(b)}else throw new Error("invalid path component - "+i)}return a}static _fromSeed(t,x){const a=B(t);if(a.length<16||a.length>64)throw new Error("invalid seed");const r=B(_e(Ge.sha512,Xt,a));return new ee(le,ke(r.slice(0,32)),null,"0x00000000",ke(r.slice(32)),0,0,x)}static fromMnemonic(t,x,a){return a=e0(a),t=Ue(Ie(t,a),a),ee._fromSeed(O0(t,x),{phrase:t,path:"m",locale:a.locale})}static fromSeed(t){return ee._fromSeed(t,null)}static fromExtendedKey(t){const x=S0.decode(t);(x.length!==82||b0(x.slice(0,78))!==t)&&Fe.throwArgumentError("invalid extended key","extendedKey","[REDACTED]");const a=x[4],r=L(x.slice(5,9)),i=parseInt(L(x.slice(9,13)).substring(2),16),b=L(x.slice(13,45)),s=x.slice(45,78);switch(L(x.slice(0,4))){case"0x0488b21e":case"0x043587cf":return new ee(le,null,L(s),r,b,i,a,null);case"0x0488ade4":case"0x04358394 ":if(s[0]!==0)break;return new ee(le,L(s.slice(1)),null,r,b,i,a,null)}return Fe.throwArgumentError("invalid extended key","extendedKey","[REDACTED]")}}function O0(e,t){t||(t="");const x=xe("mnemonic"+t,Be.NFKD);return Ye(xe(e,Be.NFKD),x,2048,64,"sha512")}function Ie(e,t){t=e0(t),Fe.checkNormalize();const x=t.split(e);if(x.length%3!==0)throw new Error("invalid mnemonic");const a=B(new Uint8Array(Math.ceil(11*x.length/8)));let r=0;for(let p=0;p<x.length;p++){let y=t.getWordIndex(x[p].normalize("NFKD"));if(y===-1)throw new Error("invalid mnemonic");for(let P=0;P<11;P++)y&1<<10-P&&(a[r>>3]|=1<<7-r%8),r++}const i=32*x.length/3,b=x.length/3,s=F0(b);if((B(be(a.slice(0,i/8)))[0]&s)!==(a[a.length-1]&s))throw new Error("invalid checksum");return L(a.slice(0,i/8))}function Ue(e,t){if(t=e0(t),e=B(e),e.length%4!==0||e.length<16||e.length>32)throw new Error("invalid entropy");const x=[0];let a=11;for(let b=0;b<e.length;b++)a>8?(x[x.length-1]<<=8,x[x.length-1]|=e[b],a-=8):(x[x.length-1]<<=a,x[x.length-1]|=e[b]>>8-a,x.push(e[b]&Yt(8-a)),a+=3);const r=e.length/4,i=B(be(e))[0]&F0(r);return x[x.length-1]<<=r,x[x.length-1]|=i>>8-r,t.join(x.map(b=>t.getWord(b)))}function ex(e,t){try{return Ie(e,t),!0}catch{}return!1}function tx(e){return(typeof e!="number"||e<0||e>=me||e%1)&&Fe.throwArgumentError("invalid account index","index",e),`m/44'/60'/${e}'/0/0`}const xx=Object.freeze(Object.defineProperty({__proto__:null,defaultPath:we,HDNode:ee,mnemonicToSeed:O0,mnemonicToEntropy:Ie,entropyToMnemonic:Ue,isValidMnemonic:ex,getAccountPath:tx},Symbol.toStringTag,{value:"Module"})),ax=H(xx);var He={},rx={get exports(){return He},set exports(e){He=e}};(function(e,t){(function(x){function a(c){return parseInt(c)===c}function r(c){if(!a(c.length))return!1;for(var o=0;o<c.length;o++)if(!a(c[o])||c[o]<0||c[o]>255)return!1;return!0}function i(c,o){if(c.buffer&&ArrayBuffer.isView(c)&&c.name==="Uint8Array")return o&&(c.slice?c=c.slice():c=Array.prototype.slice.call(c)),c;if(Array.isArray(c)){if(!r(c))throw new Error("Array contains invalid value: "+c);return new Uint8Array(c)}if(a(c.length)&&r(c))return new Uint8Array(c);throw new Error("unsupported array-like object")}function b(c){return new Uint8Array(c)}function s(c,o,u,f,d){(f!=null||d!=null)&&(c.slice?c=c.slice(f,d):c=Array.prototype.slice.call(c,f,d)),o.set(c,u)}var g=function(){function c(u){var f=[],d=0;for(u=encodeURI(u);d<u.length;){var S=u.charCodeAt(d++);S===37?(f.push(parseInt(u.substr(d,2),16)),d+=2):f.push(S)}return i(f)}function o(u){for(var f=[],d=0;d<u.length;){var S=u[d];S<128?(f.push(String.fromCharCode(S)),d++):S>191&&S<224?(f.push(String.fromCharCode((S&31)<<6|u[d+1]&63)),d+=2):(f.push(String.fromCharCode((S&15)<<12|(u[d+1]&63)<<6|u[d+2]&63)),d+=3)}return f.join("")}return{toBytes:c,fromBytes:o}}(),p=function(){function c(f){for(var d=[],S=0;S<f.length;S+=2)d.push(parseInt(f.substr(S,2),16));return d}var o="0123456789abcdef";function u(f){for(var d=[],S=0;S<f.length;S++){var K=f[S];d.push(o[(K&240)>>4]+o[K&15])}return d.join("")}return{toBytes:c,fromBytes:u}}(),y={16:10,24:12,32:14},P=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],E=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],$=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],J=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986],l=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766],n=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126],h=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436],C=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890],w=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935],v=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600],m=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480],_=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795],D=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855],F=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150],G=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function U(c){for(var o=[],u=0;u<c.length;u+=4)o.push(c[u]<<24|c[u+1]<<16|c[u+2]<<8|c[u+3]);return o}var A=function(c){if(!(this instanceof A))throw Error("AES must be instanitated with `new`");Object.defineProperty(this,"key",{value:i(c,!0)}),this._prepare()};A.prototype._prepare=function(){var c=y[this.key.length];if(c==null)throw new Error("invalid key size (must be 16, 24 or 32 bytes)");this._Ke=[],this._Kd=[];for(var o=0;o<=c;o++)this._Ke.push([0,0,0,0]),this._Kd.push([0,0,0,0]);for(var u=(c+1)*4,f=this.key.length/4,d=U(this.key),S,o=0;o<f;o++)S=o>>2,this._Ke[S][o%4]=d[o],this._Kd[c-S][o%4]=d[o];for(var K=0,k=f,O;k<u;){if(O=d[f-1],d[0]^=E[O>>16&255]<<24^E[O>>8&255]<<16^E[O&255]<<8^E[O>>24&255]^P[K]<<24,K+=1,f!=8)for(var o=1;o<f;o++)d[o]^=d[o-1];else{for(var o=1;o<f/2;o++)d[o]^=d[o-1];O=d[f/2-1],d[f/2]^=E[O&255]^E[O>>8&255]<<8^E[O>>16&255]<<16^E[O>>24&255]<<24;for(var o=f/2+1;o<f;o++)d[o]^=d[o-1]}for(var o=0,X,Y;o<f&&k<u;)X=k>>2,Y=k%4,this._Ke[X][Y]=d[o],this._Kd[c-X][Y]=d[o++],k++}for(var X=1;X<c;X++)for(var Y=0;Y<4;Y++)O=this._Kd[X][Y],this._Kd[X][Y]=_[O>>24&255]^D[O>>16&255]^F[O>>8&255]^G[O&255]},A.prototype.encrypt=function(c){if(c.length!=16)throw new Error("invalid plaintext size (must be 16 bytes)");for(var o=this._Ke.length-1,u=[0,0,0,0],f=U(c),d=0;d<4;d++)f[d]^=this._Ke[0][d];for(var S=1;S<o;S++){for(var d=0;d<4;d++)u[d]=J[f[d]>>24&255]^l[f[(d+1)%4]>>16&255]^n[f[(d+2)%4]>>8&255]^h[f[(d+3)%4]&255]^this._Ke[S][d];f=u.slice()}for(var K=b(16),k,d=0;d<4;d++)k=this._Ke[o][d],K[4*d]=(E[f[d]>>24&255]^k>>24)&255,K[4*d+1]=(E[f[(d+1)%4]>>16&255]^k>>16)&255,K[4*d+2]=(E[f[(d+2)%4]>>8&255]^k>>8)&255,K[4*d+3]=(E[f[(d+3)%4]&255]^k)&255;return K},A.prototype.decrypt=function(c){if(c.length!=16)throw new Error("invalid ciphertext size (must be 16 bytes)");for(var o=this._Kd.length-1,u=[0,0,0,0],f=U(c),d=0;d<4;d++)f[d]^=this._Kd[0][d];for(var S=1;S<o;S++){for(var d=0;d<4;d++)u[d]=C[f[d]>>24&255]^w[f[(d+3)%4]>>16&255]^v[f[(d+2)%4]>>8&255]^m[f[(d+1)%4]&255]^this._Kd[S][d];f=u.slice()}for(var K=b(16),k,d=0;d<4;d++)k=this._Kd[o][d],K[4*d]=($[f[d]>>24&255]^k>>24)&255,K[4*d+1]=($[f[(d+3)%4]>>16&255]^k>>16)&255,K[4*d+2]=($[f[(d+2)%4]>>8&255]^k>>8)&255,K[4*d+3]=($[f[(d+1)%4]&255]^k)&255;return K};var j=function(c){if(!(this instanceof j))throw Error("AES must be instanitated with `new`");this.description="Electronic Code Block",this.name="ecb",this._aes=new A(c)};j.prototype.encrypt=function(c){if(c=i(c),c.length%16!==0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var o=b(c.length),u=b(16),f=0;f<c.length;f+=16)s(c,u,0,f,f+16),u=this._aes.encrypt(u),s(u,o,f);return o},j.prototype.decrypt=function(c){if(c=i(c),c.length%16!==0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var o=b(c.length),u=b(16),f=0;f<c.length;f+=16)s(c,u,0,f,f+16),u=this._aes.decrypt(u),s(u,o,f);return o};var T=function(c,o){if(!(this instanceof T))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Block Chaining",this.name="cbc",!o)o=b(16);else if(o.length!=16)throw new Error("invalid initialation vector size (must be 16 bytes)");this._lastCipherblock=i(o,!0),this._aes=new A(c)};T.prototype.encrypt=function(c){if(c=i(c),c.length%16!==0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var o=b(c.length),u=b(16),f=0;f<c.length;f+=16){s(c,u,0,f,f+16);for(var d=0;d<16;d++)u[d]^=this._lastCipherblock[d];this._lastCipherblock=this._aes.encrypt(u),s(this._lastCipherblock,o,f)}return o},T.prototype.decrypt=function(c){if(c=i(c),c.length%16!==0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var o=b(c.length),u=b(16),f=0;f<c.length;f+=16){s(c,u,0,f,f+16),u=this._aes.decrypt(u);for(var d=0;d<16;d++)o[f+d]=u[d]^this._lastCipherblock[d];s(c,this._lastCipherblock,0,f,f+16)}return o};var M=function(c,o,u){if(!(this instanceof M))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Feedback",this.name="cfb",!o)o=b(16);else if(o.length!=16)throw new Error("invalid initialation vector size (must be 16 size)");u||(u=1),this.segmentSize=u,this._shiftRegister=i(o,!0),this._aes=new A(c)};M.prototype.encrypt=function(c){if(c.length%this.segmentSize!=0)throw new Error("invalid plaintext size (must be segmentSize bytes)");for(var o=i(c,!0),u,f=0;f<o.length;f+=this.segmentSize){u=this._aes.encrypt(this._shiftRegister);for(var d=0;d<this.segmentSize;d++)o[f+d]^=u[d];s(this._shiftRegister,this._shiftRegister,0,this.segmentSize),s(o,this._shiftRegister,16-this.segmentSize,f,f+this.segmentSize)}return o},M.prototype.decrypt=function(c){if(c.length%this.segmentSize!=0)throw new Error("invalid ciphertext size (must be segmentSize bytes)");for(var o=i(c,!0),u,f=0;f<o.length;f+=this.segmentSize){u=this._aes.encrypt(this._shiftRegister);for(var d=0;d<this.segmentSize;d++)o[f+d]^=u[d];s(this._shiftRegister,this._shiftRegister,0,this.segmentSize),s(c,this._shiftRegister,16-this.segmentSize,f,f+this.segmentSize)}return o};var te=function(c,o){if(!(this instanceof te))throw Error("AES must be instanitated with `new`");if(this.description="Output Feedback",this.name="ofb",!o)o=b(16);else if(o.length!=16)throw new Error("invalid initialation vector size (must be 16 bytes)");this._lastPrecipher=i(o,!0),this._lastPrecipherIndex=16,this._aes=new A(c)};te.prototype.encrypt=function(c){for(var o=i(c,!0),u=0;u<o.length;u++)this._lastPrecipherIndex===16&&(this._lastPrecipher=this._aes.encrypt(this._lastPrecipher),this._lastPrecipherIndex=0),o[u]^=this._lastPrecipher[this._lastPrecipherIndex++];return o},te.prototype.decrypt=te.prototype.encrypt;var I=function(c){if(!(this instanceof I))throw Error("Counter must be instanitated with `new`");c!==0&&!c&&(c=1),typeof c=="number"?(this._counter=b(16),this.setValue(c)):this.setBytes(c)};I.prototype.setValue=function(c){if(typeof c!="number"||parseInt(c)!=c)throw new Error("invalid counter value (must be an integer)");for(var o=15;o>=0;--o)this._counter[o]=c%256,c=c>>8},I.prototype.setBytes=function(c){if(c=i(c,!0),c.length!=16)throw new Error("invalid counter bytes size (must be 16 bytes)");this._counter=c},I.prototype.increment=function(){for(var c=15;c>=0;c--)if(this._counter[c]===255)this._counter[c]=0;else{this._counter[c]++;break}};var q=function(c,o){if(!(this instanceof q))throw Error("AES must be instanitated with `new`");this.description="Counter",this.name="ctr",o instanceof I||(o=new I(o)),this._counter=o,this._remainingCounter=null,this._remainingCounterIndex=16,this._aes=new A(c)};q.prototype.encrypt=function(c){for(var o=i(c,!0),u=0;u<o.length;u++)this._remainingCounterIndex===16&&(this._remainingCounter=this._aes.encrypt(this._counter._counter),this._remainingCounterIndex=0,this._counter.increment()),o[u]^=this._remainingCounter[this._remainingCounterIndex++];return o},q.prototype.decrypt=q.prototype.encrypt;function fe(c){c=i(c,!0);var o=16-c.length%16,u=b(c.length+o);s(c,u);for(var f=c.length;f<u.length;f++)u[f]=o;return u}function Q(c){if(c=i(c,!0),c.length<16)throw new Error("PKCS#7 invalid length");var o=c[c.length-1];if(o>16)throw new Error("PKCS#7 padding byte out of range");for(var u=c.length-o,f=0;f<o;f++)if(c[u+f]!==o)throw new Error("PKCS#7 invalid padding byte");var d=b(u);return s(c,d,0,0,u),d}var N={AES:A,Counter:I,ModeOfOperation:{ecb:j,cbc:T,cfb:M,ofb:te,ctr:q},utils:{hex:p,utf8:g},padding:{pkcs7:{pad:fe,strip:Q}},_arrayTest:{coerceArray:i,createArray:b,copyArray:s}};e.exports=N})()})(rx);const ce=He,T0="json-wallets/5.7.0";function ie(e){return typeof e=="string"&&e.substring(0,2)!=="0x"&&(e="0x"+e),B(e)}function ve(e,t){for(e=String(e);e.length<t;)e="0"+e;return e}function t0(e){return typeof e=="string"?xe(e,Be.NFKC):B(e)}function z(e,t){let x=e;const a=t.toLowerCase().split("/");for(let r=0;r<a.length;r++){let i=null;for(const b in x)if(b.toLowerCase()===a[r]){i=x[b];break}if(i===null)return null;x=i}return x}function cx(e){const t=B(e);t[6]=t[6]&15|64,t[8]=t[8]&63|128;const x=L(t);return[x.substring(2,10),x.substring(10,14),x.substring(14,18),x.substring(18,22),x.substring(22,34)].join("-")}const nx=new V(T0);class fx extends w0{isCrowdsaleAccount(t){return!!(t&&t._isCrowdsaleAccount)}}function x0(e,t){const x=JSON.parse(e);t=t0(t);const a=se(z(x,"ethaddr")),r=ie(z(x,"encseed"));(!r||r.length%16!==0)&&nx.throwArgumentError("invalid encseed","json",e);const i=B(Ye(t,t,2e3,32,"sha256")).slice(0,16),b=r.slice(0,16),s=r.slice(16),g=new ce.ModeOfOperation.cbc(i,b),p=ce.padding.pkcs7.strip(B(g.decrypt(s)));let y="";for(let $=0;$<p.length;$++)y+=String.fromCharCode(p[$]);const P=xe(y),E=oe(P);return new fx({_isCrowdsaleAccount:!0,address:a,privateKey:E})}function Ke(e){let t=null;try{t=JSON.parse(e)}catch{return!1}return t.encseed&&t.ethaddr}function Le(e){let t=null;try{t=JSON.parse(e)}catch{return!1}return!(!t.version||parseInt(t.version)!==t.version||parseInt(t.version)!==3)}function dx(e){if(Ke(e))try{return se(JSON.parse(e).ethaddr)}catch{return null}if(Le(e))try{return se(JSON.parse(e).address)}catch{return null}return null}var Ne={},ix={get exports(){return Ne},set exports(e){Ne=e}};(function(e,t){(function(x){function r(l){const n=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);let h=1779033703,C=3144134277,w=1013904242,v=2773480762,m=1359893119,_=2600822924,D=528734635,F=1541459225;const G=new Uint32Array(64);function U(q){let fe=0,Q=q.length;for(;Q>=64;){let N=h,c=C,o=w,u=v,f=m,d=_,S=D,K=F,k,O,X,Y,Te;for(O=0;O<16;O++)X=fe+O*4,G[O]=(q[X]&255)<<24|(q[X+1]&255)<<16|(q[X+2]&255)<<8|q[X+3]&255;for(O=16;O<64;O++)k=G[O-2],Y=(k>>>17|k<<32-17)^(k>>>19|k<<32-19)^k>>>10,k=G[O-15],Te=(k>>>7|k<<32-7)^(k>>>18|k<<32-18)^k>>>3,G[O]=(Y+G[O-7]|0)+(Te+G[O-16]|0)|0;for(O=0;O<64;O++)Y=(((f>>>6|f<<32-6)^(f>>>11|f<<32-11)^(f>>>25|f<<32-25))+(f&d^~f&S)|0)+(K+(n[O]+G[O]|0)|0)|0,Te=((N>>>2|N<<32-2)^(N>>>13|N<<32-13)^(N>>>22|N<<32-22))+(N&c^N&o^c&o)|0,K=S,S=d,d=f,f=u+Y|0,u=o,o=c,c=N,N=Y+Te|0;h=h+N|0,C=C+c|0,w=w+o|0,v=v+u|0,m=m+f|0,_=_+d|0,D=D+S|0,F=F+K|0,fe+=64,Q-=64}}U(l);let A,j=l.length%64,T=l.length/536870912|0,M=l.length<<3,te=j<56?56:120,I=l.slice(l.length-j,l.length);for(I.push(128),A=j+1;A<te;A++)I.push(0);return I.push(T>>>24&255),I.push(T>>>16&255),I.push(T>>>8&255),I.push(T>>>0&255),I.push(M>>>24&255),I.push(M>>>16&255),I.push(M>>>8&255),I.push(M>>>0&255),U(I),[h>>>24&255,h>>>16&255,h>>>8&255,h>>>0&255,C>>>24&255,C>>>16&255,C>>>8&255,C>>>0&255,w>>>24&255,w>>>16&255,w>>>8&255,w>>>0&255,v>>>24&255,v>>>16&255,v>>>8&255,v>>>0&255,m>>>24&255,m>>>16&255,m>>>8&255,m>>>0&255,_>>>24&255,_>>>16&255,_>>>8&255,_>>>0&255,D>>>24&255,D>>>16&255,D>>>8&255,D>>>0&255,F>>>24&255,F>>>16&255,F>>>8&255,F>>>0&255]}function i(l,n,h){l=l.length<=64?l:r(l);const C=64+n.length+4,w=new Array(C),v=new Array(64);let m,_=[];for(m=0;m<64;m++)w[m]=54;for(m=0;m<l.length;m++)w[m]^=l[m];for(m=0;m<n.length;m++)w[64+m]=n[m];for(m=C-4;m<C;m++)w[m]=0;for(m=0;m<64;m++)v[m]=92;for(m=0;m<l.length;m++)v[m]^=l[m];function D(){for(let F=C-1;F>=C-4;F--){if(w[F]++,w[F]<=255)return;w[F]=0}}for(;h>=32;)D(),_=_.concat(r(v.concat(r(w)))),h-=32;return h>0&&(D(),_=_.concat(r(v.concat(r(w))).slice(0,h))),_}function b(l,n,h,C,w){let v;for(y(l,(2*h-1)*16,w,0,16),v=0;v<2*h;v++)p(l,v*16,w,16),g(w,C),y(w,0,l,n+v*16,16);for(v=0;v<h;v++)y(l,n+v*2*16,l,v*16,16);for(v=0;v<h;v++)y(l,n+(v*2+1)*16,l,(v+h)*16,16)}function s(l,n){return l<<n|l>>>32-n}function g(l,n){y(l,0,n,0,16);for(let h=8;h>0;h-=2)n[4]^=s(n[0]+n[12],7),n[8]^=s(n[4]+n[0],9),n[12]^=s(n[8]+n[4],13),n[0]^=s(n[12]+n[8],18),n[9]^=s(n[5]+n[1],7),n[13]^=s(n[9]+n[5],9),n[1]^=s(n[13]+n[9],13),n[5]^=s(n[1]+n[13],18),n[14]^=s(n[10]+n[6],7),n[2]^=s(n[14]+n[10],9),n[6]^=s(n[2]+n[14],13),n[10]^=s(n[6]+n[2],18),n[3]^=s(n[15]+n[11],7),n[7]^=s(n[3]+n[15],9),n[11]^=s(n[7]+n[3],13),n[15]^=s(n[11]+n[7],18),n[1]^=s(n[0]+n[3],7),n[2]^=s(n[1]+n[0],9),n[3]^=s(n[2]+n[1],13),n[0]^=s(n[3]+n[2],18),n[6]^=s(n[5]+n[4],7),n[7]^=s(n[6]+n[5],9),n[4]^=s(n[7]+n[6],13),n[5]^=s(n[4]+n[7],18),n[11]^=s(n[10]+n[9],7),n[8]^=s(n[11]+n[10],9),n[9]^=s(n[8]+n[11],13),n[10]^=s(n[9]+n[8],18),n[12]^=s(n[15]+n[14],7),n[13]^=s(n[12]+n[15],9),n[14]^=s(n[13]+n[12],13),n[15]^=s(n[14]+n[13],18);for(let h=0;h<16;++h)l[h]+=n[h]}function p(l,n,h,C){for(let w=0;w<C;w++)h[w]^=l[n+w]}function y(l,n,h,C,w){for(;w--;)h[C++]=l[n++]}function P(l){if(!l||typeof l.length!="number")return!1;for(let n=0;n<l.length;n++){const h=l[n];if(typeof h!="number"||h%1||h<0||h>=256)return!1}return!0}function E(l,n){if(typeof l!="number"||l%1)throw new Error("invalid "+n);return l}function $(l,n,h,C,w,v,m){if(h=E(h,"N"),C=E(C,"r"),w=E(w,"p"),v=E(v,"dkLen"),h===0||h&h-1)throw new Error("N must be power of 2");if(h>2147483647/128/C)throw new Error("N too large");if(C>2147483647/128/w)throw new Error("r too large");if(!P(l))throw new Error("password must be an array or buffer");if(l=Array.prototype.slice.call(l),!P(n))throw new Error("salt must be an array or buffer");n=Array.prototype.slice.call(n);let _=i(l,n,w*128*C);const D=new Uint32Array(w*32*C);for(let f=0;f<D.length;f++){const d=f*4;D[f]=(_[d+3]&255)<<24|(_[d+2]&255)<<16|(_[d+1]&255)<<8|(_[d+0]&255)<<0}const F=new Uint32Array(64*C),G=new Uint32Array(32*C*h),U=32*C,A=new Uint32Array(16),j=new Uint32Array(16),T=w*h*2;let M=0,te=null,I=!1,q=0,fe=0,Q,N;const c=m?parseInt(1e3/C):4294967295,o=typeof setImmediate<"u"?setImmediate:setTimeout,u=function(){if(I)return m(new Error("cancelled"),M/T);let f;switch(q){case 0:N=fe*32*C,y(D,N,F,0,U),q=1,Q=0;case 1:f=h-Q,f>c&&(f=c);for(let S=0;S<f;S++)y(F,0,G,(Q+S)*U,U),b(F,U,C,A,j);if(Q+=f,M+=f,m){const S=parseInt(1e3*M/T);if(S!==te){if(I=m(null,M/T),I)break;te=S}}if(Q<h)break;Q=0,q=2;case 2:f=h-Q,f>c&&(f=c);for(let S=0;S<f;S++){const K=(2*C-1)*16,k=F[K]&h-1;p(G,k*U,F,U),b(F,U,C,A,j)}if(Q+=f,M+=f,m){const S=parseInt(1e3*M/T);if(S!==te){if(I=m(null,M/T),I)break;te=S}}if(Q<h)break;if(y(F,0,D,N,U),fe++,fe<w){q=0;break}_=[];for(let S=0;S<D.length;S++)_.push(D[S]>>0&255),_.push(D[S]>>8&255),_.push(D[S]>>16&255),_.push(D[S]>>24&255);const d=i(l,_,v);return m&&m(null,1,d),d}m&&o(u)};if(!m)for(;;){const f=u();if(f!=null)return f}u()}const J={scrypt:function(l,n,h,C,w,v,m){return new Promise(function(_,D){let F=0;m&&m(0),$(l,n,h,C,w,v,function(G,U,A){if(G)D(G);else if(A)m&&F!==1&&m(1),_(new Uint8Array(A));else if(m&&U!==F)return F=U,m(U)})})},syncScrypt:function(l,n,h,C,w,v){return new Uint8Array($(l,n,h,C,w,v))}};e.exports=J})()})(ix);const a0=Ne,ox="random/5.7.0",We=new V(ox);function bx(){if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw new Error("unable to locate global object")}const s0=bx();let Me=s0.crypto||s0.msCrypto;(!Me||!Me.getRandomValues)&&(We.warn("WARNING: Missing strong random number source"),Me={getRandomValues:function(e){return We.throwError("no secure random source avaialble",V.errors.UNSUPPORTED_OPERATION,{operation:"crypto.getRandomValues"})}});function ye(e){(e<=0||e>1024||e%1||e!=e)&&We.throwArgumentError("invalid length","length",e);const t=new Uint8Array(e);return Me.getRandomValues(t),B(t)}function sx(e){e=e.slice();for(let t=e.length-1;t>0;t--){const x=Math.floor(Math.random()*(t+1)),a=e[t];e[t]=e[x],e[x]=a}return e}const ux=Object.freeze(Object.defineProperty({__proto__:null,randomBytes:ye,shuffled:sx},Symbol.toStringTag,{value:"Module"}));var lx=globalThis&&globalThis.__awaiter||function(e,t,x,a){function r(i){return i instanceof x?i:new x(function(b){b(i)})}return new(x||(x=Promise))(function(i,b){function s(y){try{p(a.next(y))}catch(P){b(P)}}function g(y){try{p(a.throw(y))}catch(P){b(P)}}function p(y){y.done?i(y.value):r(y.value).then(s,g)}p((a=a.apply(e,t||[])).next())})};const Ve=new V(T0);function u0(e){return e!=null&&e.mnemonic&&e.mnemonic.phrase}class hx extends w0{isKeystoreAccount(t){return!!(t&&t._isKeystoreAccount)}}function mx(e,t,x){if(z(e,"crypto/cipher")==="aes-128-ctr"){const r=ie(z(e,"crypto/cipherparams/iv")),i=new ce.Counter(r),b=new ce.ModeOfOperation.ctr(t,i);return B(b.decrypt(x))}return null}function k0(e,t){const x=ie(z(e,"crypto/ciphertext"));if(L(oe(ne([t.slice(16,32),x]))).substring(2)!==z(e,"crypto/mac").toLowerCase())throw new Error("invalid password");const r=mx(e,t.slice(0,16),x);r||Ve.throwError("unsupported cipher",V.errors.UNSUPPORTED_OPERATION,{operation:"decrypt"});const i=t.slice(32,64),b=pe(r);if(e.address){let g=e.address.toLowerCase();if(g.substring(0,2)!=="0x"&&(g="0x"+g),se(g)!==b)throw new Error("address mismatch")}const s={_isKeystoreAccount:!0,address:b,privateKey:L(r)};if(z(e,"x-ethers/version")==="0.1"){const g=ie(z(e,"x-ethers/mnemonicCiphertext")),p=ie(z(e,"x-ethers/mnemonicCounter")),y=new ce.Counter(p),P=new ce.ModeOfOperation.ctr(i,y),E=z(e,"x-ethers/path")||we,$=z(e,"x-ethers/locale")||"en",J=B(P.decrypt(g));try{const l=Ue(J,$),n=ee.fromMnemonic(l,null,$).derivePath(E);if(n.privateKey!=s.privateKey)throw new Error("mnemonic mismatch");s.mnemonic=n.mnemonic}catch(l){if(l.code!==V.errors.INVALID_ARGUMENT||l.argument!=="wordlist")throw l}}return new hx(s)}function D0(e,t,x,a,r){return B(Ye(e,t,x,a,r))}function gx(e,t,x,a,r){return Promise.resolve(D0(e,t,x,a,r))}function M0(e,t,x,a,r){const i=t0(t),b=z(e,"crypto/kdf");if(b&&typeof b=="string"){const s=function(g,p){return Ve.throwArgumentError("invalid key-derivation function parameters",g,p)};if(b.toLowerCase()==="scrypt"){const g=ie(z(e,"crypto/kdfparams/salt")),p=parseInt(z(e,"crypto/kdfparams/n")),y=parseInt(z(e,"crypto/kdfparams/r")),P=parseInt(z(e,"crypto/kdfparams/p"));(!p||!y||!P)&&s("kdf",b),p&p-1&&s("N",p);const E=parseInt(z(e,"crypto/kdfparams/dklen"));return E!==32&&s("dklen",E),a(i,g,p,y,P,64,r)}else if(b.toLowerCase()==="pbkdf2"){const g=ie(z(e,"crypto/kdfparams/salt"));let p=null;const y=z(e,"crypto/kdfparams/prf");y==="hmac-sha256"?p="sha256":y==="hmac-sha512"?p="sha512":s("prf",y);const P=parseInt(z(e,"crypto/kdfparams/c")),E=parseInt(z(e,"crypto/kdfparams/dklen"));return E!==32&&s("dklen",E),x(i,g,P,E,p)}}return Ve.throwArgumentError("unsupported key-derivation function","kdf",b)}function R0(e,t){const x=JSON.parse(e),a=M0(x,t,D0,a0.syncScrypt);return k0(x,a)}function j0(e,t,x){return lx(this,void 0,void 0,function*(){const a=JSON.parse(e),r=yield M0(a,t,gx,a0.scrypt,x);return k0(a,r)})}function I0(e,t,x,a){try{if(se(e.address)!==pe(e.privateKey))throw new Error("address/privateKey mismatch");if(u0(e)){const n=e.mnemonic;if(ee.fromMnemonic(n.phrase,null,n.locale).derivePath(n.path||we).privateKey!=e.privateKey)throw new Error("mnemonic mismatch")}}catch(n){return Promise.reject(n)}typeof x=="function"&&!a&&(a=x,x={}),x||(x={});const r=B(e.privateKey),i=t0(t);let b=null,s=null,g=null;if(u0(e)){const n=e.mnemonic;b=B(Ie(n.phrase,n.locale||"en")),s=n.path||we,g=n.locale||"en"}let p=x.client;p||(p="ethers.js");let y=null;x.salt?y=B(x.salt):y=ye(32);let P=null;if(x.iv){if(P=B(x.iv),P.length!==16)throw new Error("invalid iv")}else P=ye(16);let E=null;if(x.uuid){if(E=B(x.uuid),E.length!==16)throw new Error("invalid uuid")}else E=ye(16);let $=1<<17,J=8,l=1;return x.scrypt&&(x.scrypt.N&&($=x.scrypt.N),x.scrypt.r&&(J=x.scrypt.r),x.scrypt.p&&(l=x.scrypt.p)),a0.scrypt(i,y,$,J,l,64,a).then(n=>{n=B(n);const h=n.slice(0,16),C=n.slice(16,32),w=n.slice(32,64),v=new ce.Counter(P),m=new ce.ModeOfOperation.ctr(h,v),_=B(m.encrypt(r)),D=oe(ne([C,_])),F={address:e.address.substring(2).toLowerCase(),id:cx(E),version:3,crypto:{cipher:"aes-128-ctr",cipherparams:{iv:L(P).substring(2)},ciphertext:L(_).substring(2),kdf:"scrypt",kdfparams:{salt:L(y).substring(2),n:$,dklen:32,p:l,r:J},mac:D.substring(2)}};if(b){const G=ye(16),U=new ce.Counter(G),A=new ce.ModeOfOperation.ctr(w,U),j=B(A.encrypt(b)),T=new Date,M=T.getUTCFullYear()+"-"+ve(T.getUTCMonth()+1,2)+"-"+ve(T.getUTCDate(),2)+"T"+ve(T.getUTCHours(),2)+"-"+ve(T.getUTCMinutes(),2)+"-"+ve(T.getUTCSeconds(),2)+".0Z";F["x-ethers"]={client:p,gethFilename:"UTC--"+M+"--"+F.address,mnemonicCounter:L(G).substring(2),mnemonicCiphertext:L(j).substring(2),path:s,locale:g,version:"0.1"}}return JSON.stringify(F)})}function U0(e,t,x){if(Ke(e)){x&&x(0);const a=x0(e,t);return x&&x(1),Promise.resolve(a)}return Le(e)?j0(e,t,x):Promise.reject(new Error("invalid JSON wallet"))}function K0(e,t){if(Ke(e))return x0(e,t);if(Le(e))return R0(e,t);throw new Error("invalid JSON wallet")}const yx=Object.freeze(Object.defineProperty({__proto__:null,decryptCrowdsale:x0,decryptKeystore:j0,decryptKeystoreSync:R0,encryptKeystore:I0,isCrowdsaleWallet:Ke,isKeystoreWallet:Le,getJsonWalletAddress:dx,decryptJsonWallet:U0,decryptJsonWalletSync:K0},Symbol.toStringTag,{value:"Module"})),px=H(yx),Sx=H(dt),wx=H(it),l0=H(Nt),vx="solidity/5.7.0",Px=new RegExp("^bytes([0-9]+)$"),Cx=new RegExp("^(u?int)([0-9]*)$"),Ex=new RegExp("^(.*)\\[([0-9]*)\\]$"),Ax="0000000000000000000000000000000000000000000000000000000000000000",ge=new V(vx);function L0(e,t,x){switch(e){case"address":return x?$e(t,32):B(t);case"string":return xe(t);case"bytes":return B(t);case"bool":return t=t?"0x01":"0x00",x?$e(t,32):B(t)}let a=e.match(Cx);if(a){let r=parseInt(a[2]||"256");return(a[2]&&String(r)!==a[2]||r%8!==0||r===0||r>256)&&ge.throwArgumentError("invalid number type","type",e),x&&(r=256),t=ae.from(t).toTwos(r),$e(t,r/8)}if(a=e.match(Px),a){const r=parseInt(a[1]);return(String(r)!==a[1]||r===0||r>32)&&ge.throwArgumentError("invalid bytes type","type",e),B(t).byteLength!==r&&ge.throwArgumentError(`invalid value for ${e}`,"value",t),x?B((t+Ax).substring(0,66)):t}if(a=e.match(Ex),a&&Array.isArray(t)){const r=a[1];parseInt(a[2]||String(t.length))!=t.length&&ge.throwArgumentError(`invalid array length for ${e}`,"value",t);const b=[];return t.forEach(function(s){b.push(L0(r,s,!0))}),ne(b)}return ge.throwArgumentError("invalid type","type",e)}function r0(e,t){e.length!=t.length&&ge.throwArgumentError("wrong number of values; expected ${ types.length }","values",t);const x=[];return e.forEach(function(a,r){x.push(L0(a,t[r]))}),L(ne(x))}function Bx(e,t){return oe(r0(e,t))}function _x(e,t){return be(r0(e,t))}const Fx=Object.freeze(Object.defineProperty({__proto__:null,pack:r0,keccak256:Bx,sha256:_x},Symbol.toStringTag,{value:"Module"})),Ox=H(Fx),Tx=H(ux),kx=H(ot),Dx=H(bt),Mx=H(st),h0=H(It),Rx=H(ut),jx="units/5.7.0",$0=new V(jx),z0=["wei","kwei","mwei","gwei","szabo","finney","ether"];function Ix(e){const t=String(e).split(".");(t.length>2||!t[0].match(/^-?[0-9]*$/)||t[1]&&!t[1].match(/^[0-9]*$/)||e==="."||e==="-.")&&$0.throwArgumentError("invalid value","value",e);let x=t[0],a="";for(x.substring(0,1)==="-"&&(a="-",x=x.substring(1));x.substring(0,1)==="0";)x=x.substring(1);x===""&&(x="0");let r="";for(t.length===2&&(r="."+(t[1]||"0"));r.length>2&&r[r.length-1]==="0";)r=r.substring(0,r.length-1);const i=[];for(;x.length;)if(x.length<=3){i.unshift(x);break}else{const b=x.length-3;i.unshift(x.substring(b)),x=x.substring(0,b)}return a+i.join(",")+r}function G0(e,t){if(typeof t=="string"){const x=z0.indexOf(t);x!==-1&&(t=3*x)}return De(e,t??18)}function H0(e,t){if(typeof e!="string"&&$0.throwArgumentError("value must be a string","value",e),typeof t=="string"){const x=z0.indexOf(t);x!==-1&&(t=3*x)}return re(e,t??18)}function Ux(e){return G0(e,18)}function Kx(e){return H0(e,18)}const Lx=Object.freeze(Object.defineProperty({__proto__:null,commify:Ix,formatUnits:G0,parseUnits:H0,formatEther:Ux,parseEther:Kx},Symbol.toStringTag,{value:"Module"})),$x=H(Lx),zx="wallet/5.7.0";var m0=globalThis&&globalThis.__awaiter||function(e,t,x,a){function r(i){return i instanceof x?i:new x(function(b){b(i)})}return new(x||(x=Promise))(function(i,b){function s(y){try{p(a.next(y))}catch(P){b(P)}}function g(y){try{p(a.throw(y))}catch(P){b(P)}}function p(y){y.done?i(y.value):r(y.value).then(s,g)}p((a=a.apply(e,t||[])).next())})};const he=new V(zx);function Gx(e){return e!=null&&gt(e.privateKey,32)&&e.address!=null}function Hx(e){const t=e.mnemonic;return t&&t.phrase}class de extends lt{constructor(t,x){if(super(),Gx(t)){const a=new Pe(t.privateKey);if(R(this,"_signingKey",()=>a),R(this,"address",pe(this.publicKey)),this.address!==se(t.address)&&he.throwArgumentError("privateKey/address mismatch","privateKey","[REDACTED]"),Hx(t)){const r=t.mnemonic;R(this,"_mnemonic",()=>({phrase:r.phrase,path:r.path||we,locale:r.locale||"en"}));const i=this.mnemonic,b=ee.fromMnemonic(i.phrase,null,i.locale).derivePath(i.path);pe(b.privateKey)!==this.address&&he.throwArgumentError("mnemonic/address mismatch","privateKey","[REDACTED]")}else R(this,"_mnemonic",()=>null)}else{if(Pe.isSigningKey(t))t.curve!=="secp256k1"&&he.throwArgumentError("unsupported curve; must be secp256k1","privateKey","[REDACTED]"),R(this,"_signingKey",()=>t);else{typeof t=="string"&&t.match(/^[0-9a-f]*$/i)&&t.length===64&&(t="0x"+t);const a=new Pe(t);R(this,"_signingKey",()=>a)}R(this,"_mnemonic",()=>null),R(this,"address",pe(this.publicKey))}x&&!ht.isProvider(x)&&he.throwArgumentError("invalid provider","provider",x),R(this,"provider",x||null)}get mnemonic(){return this._mnemonic()}get privateKey(){return this._signingKey().privateKey}get publicKey(){return this._signingKey().publicKey}getAddress(){return Promise.resolve(this.address)}connect(t){return new de(this,t)}signTransaction(t){return mt(t).then(x=>{x.from!=null&&(se(x.from)!==this.address&&he.throwArgumentError("transaction from address mismatch","transaction.from",t.from),delete x.from);const a=this._signingKey().signDigest(oe(n0(x)));return n0(x,a)})}signMessage(t){return m0(this,void 0,void 0,function*(){return f0(this._signingKey().signDigest(Xe(t)))})}_signTypedData(t,x,a){return m0(this,void 0,void 0,function*(){const r=yield je.resolveNames(t,x,a,i=>(this.provider==null&&he.throwError("cannot resolve ENS names without a provider",V.errors.UNSUPPORTED_OPERATION,{operation:"resolveName",value:i}),this.provider.resolveName(i)));return f0(this._signingKey().signDigest(je.hash(r.domain,x,r.value)))})}encrypt(t,x,a){if(typeof x=="function"&&!a&&(a=x,x={}),a&&typeof a!="function")throw new Error("invalid callback");return x||(x={}),I0(this,t,x,a)}static createRandom(t){let x=ye(16);t||(t={}),t.extraEntropy&&(x=B(Je(oe(ne([x,t.extraEntropy])),0,16)));const a=Ue(x,t.locale);return de.fromMnemonic(a,t.path,t.locale)}static fromEncryptedJson(t,x,a){return U0(t,x,a).then(r=>new de(r))}static fromEncryptedJsonSync(t,x){return new de(K0(t,x))}static fromMnemonic(t,x,a){return x||(x=we),new de(ee.fromMnemonic(t,null,a).derivePath(x))}}function Nx(e,t){return v0(Xe(e),t)}function Wx(e,t,x,a){return v0(je.hash(e,t,x),a)}const Vx=Object.freeze(Object.defineProperty({__proto__:null,Wallet:de,verifyMessage:Nx,verifyTypedData:Wx},Symbol.toStringTag,{value:"Module"})),Jx=H(Vx),qx=H(yt);(function(e){var t=ue&&ue.__createBinding||(Object.create?function(A,j,T,M){M===void 0&&(M=T),Object.defineProperty(A,M,{enumerable:!0,get:function(){return j[T]}})}:function(A,j,T,M){M===void 0&&(M=T),A[M]=j[T]}),x=ue&&ue.__setModuleDefault||(Object.create?function(A,j){Object.defineProperty(A,"default",{enumerable:!0,value:j})}:function(A,j){A.default=j}),a=ue&&ue.__importStar||function(A){if(A&&A.__esModule)return A;var j={};if(A!=null)for(var T in A)T!=="default"&&Object.prototype.hasOwnProperty.call(A,T)&&t(j,A,T);return x(j,A),j};Object.defineProperty(e,"__esModule",{value:!0}),e.formatBytes32String=e.Utf8ErrorFuncs=e.toUtf8String=e.toUtf8CodePoints=e.toUtf8Bytes=e._toEscapedUtf8String=e.nameprep=e.hexDataSlice=e.hexDataLength=e.hexZeroPad=e.hexValue=e.hexStripZeros=e.hexConcat=e.isHexString=e.hexlify=e.base64=e.base58=e.TransactionDescription=e.LogDescription=e.Interface=e.SigningKey=e.HDNode=e.defaultPath=e.isBytesLike=e.isBytes=e.zeroPad=e.stripZeros=e.concat=e.arrayify=e.shallowCopy=e.resolveProperties=e.getStatic=e.defineReadOnly=e.deepCopy=e.checkProperties=e.poll=e.fetchJson=e._fetchData=e.RLP=e.Logger=e.checkResultErrors=e.FormatTypes=e.ParamType=e.FunctionFragment=e.EventFragment=e.ErrorFragment=e.ConstructorFragment=e.Fragment=e.defaultAbiCoder=e.AbiCoder=void 0,e.Indexed=e.Utf8ErrorReason=e.UnicodeNormalizationForm=e.SupportedAlgorithm=e.mnemonicToSeed=e.isValidMnemonic=e.entropyToMnemonic=e.mnemonicToEntropy=e.getAccountPath=e.verifyTypedData=e.verifyMessage=e.recoverPublicKey=e.computePublicKey=e.recoverAddress=e.computeAddress=e.getJsonWalletAddress=e.TransactionTypes=e.serializeTransaction=e.parseTransaction=e.accessListify=e.joinSignature=e.splitSignature=e.soliditySha256=e.solidityKeccak256=e.solidityPack=e.shuffled=e.randomBytes=e.sha512=e.sha256=e.ripemd160=e.keccak256=e.computeHmac=e.commify=e.parseUnits=e.formatUnits=e.parseEther=e.formatEther=e.isAddress=e.getCreate2Address=e.getContractAddress=e.getIcapAddress=e.getAddress=e._TypedDataEncoder=e.id=e.isValidName=e.namehash=e.hashMessage=e.dnsEncode=e.parseBytes32String=void 0;var r=pt;Object.defineProperty(e,"AbiCoder",{enumerable:!0,get:function(){return r.AbiCoder}}),Object.defineProperty(e,"checkResultErrors",{enumerable:!0,get:function(){return r.checkResultErrors}}),Object.defineProperty(e,"ConstructorFragment",{enumerable:!0,get:function(){return r.ConstructorFragment}}),Object.defineProperty(e,"defaultAbiCoder",{enumerable:!0,get:function(){return r.defaultAbiCoder}}),Object.defineProperty(e,"ErrorFragment",{enumerable:!0,get:function(){return r.ErrorFragment}}),Object.defineProperty(e,"EventFragment",{enumerable:!0,get:function(){return r.EventFragment}}),Object.defineProperty(e,"FormatTypes",{enumerable:!0,get:function(){return r.FormatTypes}}),Object.defineProperty(e,"Fragment",{enumerable:!0,get:function(){return r.Fragment}}),Object.defineProperty(e,"FunctionFragment",{enumerable:!0,get:function(){return r.FunctionFragment}}),Object.defineProperty(e,"Indexed",{enumerable:!0,get:function(){return r.Indexed}}),Object.defineProperty(e,"Interface",{enumerable:!0,get:function(){return r.Interface}}),Object.defineProperty(e,"LogDescription",{enumerable:!0,get:function(){return r.LogDescription}}),Object.defineProperty(e,"ParamType",{enumerable:!0,get:function(){return r.ParamType}}),Object.defineProperty(e,"TransactionDescription",{enumerable:!0,get:function(){return r.TransactionDescription}});var i=Lt;Object.defineProperty(e,"getAddress",{enumerable:!0,get:function(){return i.getAddress}}),Object.defineProperty(e,"getCreate2Address",{enumerable:!0,get:function(){return i.getCreate2Address}}),Object.defineProperty(e,"getContractAddress",{enumerable:!0,get:function(){return i.getContractAddress}}),Object.defineProperty(e,"getIcapAddress",{enumerable:!0,get:function(){return i.getIcapAddress}}),Object.defineProperty(e,"isAddress",{enumerable:!0,get:function(){return i.isAddress}});var b=a($t);e.base64=b;var s=zt;Object.defineProperty(e,"base58",{enumerable:!0,get:function(){return s.Base58}});var g=Gt;Object.defineProperty(e,"arrayify",{enumerable:!0,get:function(){return g.arrayify}}),Object.defineProperty(e,"concat",{enumerable:!0,get:function(){return g.concat}}),Object.defineProperty(e,"hexConcat",{enumerable:!0,get:function(){return g.hexConcat}}),Object.defineProperty(e,"hexDataSlice",{enumerable:!0,get:function(){return g.hexDataSlice}}),Object.defineProperty(e,"hexDataLength",{enumerable:!0,get:function(){return g.hexDataLength}}),Object.defineProperty(e,"hexlify",{enumerable:!0,get:function(){return g.hexlify}}),Object.defineProperty(e,"hexStripZeros",{enumerable:!0,get:function(){return g.hexStripZeros}}),Object.defineProperty(e,"hexValue",{enumerable:!0,get:function(){return g.hexValue}}),Object.defineProperty(e,"hexZeroPad",{enumerable:!0,get:function(){return g.hexZeroPad}}),Object.defineProperty(e,"isBytes",{enumerable:!0,get:function(){return g.isBytes}}),Object.defineProperty(e,"isBytesLike",{enumerable:!0,get:function(){return g.isBytesLike}}),Object.defineProperty(e,"isHexString",{enumerable:!0,get:function(){return g.isHexString}}),Object.defineProperty(e,"joinSignature",{enumerable:!0,get:function(){return g.joinSignature}}),Object.defineProperty(e,"zeroPad",{enumerable:!0,get:function(){return g.zeroPad}}),Object.defineProperty(e,"splitSignature",{enumerable:!0,get:function(){return g.splitSignature}}),Object.defineProperty(e,"stripZeros",{enumerable:!0,get:function(){return g.stripZeros}});var p=Ht;Object.defineProperty(e,"_TypedDataEncoder",{enumerable:!0,get:function(){return p._TypedDataEncoder}}),Object.defineProperty(e,"dnsEncode",{enumerable:!0,get:function(){return p.dnsEncode}}),Object.defineProperty(e,"hashMessage",{enumerable:!0,get:function(){return p.hashMessage}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return p.id}}),Object.defineProperty(e,"isValidName",{enumerable:!0,get:function(){return p.isValidName}}),Object.defineProperty(e,"namehash",{enumerable:!0,get:function(){return p.namehash}});var y=ax;Object.defineProperty(e,"defaultPath",{enumerable:!0,get:function(){return y.defaultPath}}),Object.defineProperty(e,"entropyToMnemonic",{enumerable:!0,get:function(){return y.entropyToMnemonic}}),Object.defineProperty(e,"getAccountPath",{enumerable:!0,get:function(){return y.getAccountPath}}),Object.defineProperty(e,"HDNode",{enumerable:!0,get:function(){return y.HDNode}}),Object.defineProperty(e,"isValidMnemonic",{enumerable:!0,get:function(){return y.isValidMnemonic}}),Object.defineProperty(e,"mnemonicToEntropy",{enumerable:!0,get:function(){return y.mnemonicToEntropy}}),Object.defineProperty(e,"mnemonicToSeed",{enumerable:!0,get:function(){return y.mnemonicToSeed}});var P=px;Object.defineProperty(e,"getJsonWalletAddress",{enumerable:!0,get:function(){return P.getJsonWalletAddress}});var E=Sx;Object.defineProperty(e,"keccak256",{enumerable:!0,get:function(){return E.keccak256}});var $=wx;Object.defineProperty(e,"Logger",{enumerable:!0,get:function(){return $.Logger}});var J=l0;Object.defineProperty(e,"computeHmac",{enumerable:!0,get:function(){return J.computeHmac}}),Object.defineProperty(e,"ripemd160",{enumerable:!0,get:function(){return J.ripemd160}}),Object.defineProperty(e,"sha256",{enumerable:!0,get:function(){return J.sha256}}),Object.defineProperty(e,"sha512",{enumerable:!0,get:function(){return J.sha512}});var l=Ox;Object.defineProperty(e,"solidityKeccak256",{enumerable:!0,get:function(){return l.keccak256}}),Object.defineProperty(e,"solidityPack",{enumerable:!0,get:function(){return l.pack}}),Object.defineProperty(e,"soliditySha256",{enumerable:!0,get:function(){return l.sha256}});var n=Tx;Object.defineProperty(e,"randomBytes",{enumerable:!0,get:function(){return n.randomBytes}}),Object.defineProperty(e,"shuffled",{enumerable:!0,get:function(){return n.shuffled}});var h=kx;Object.defineProperty(e,"checkProperties",{enumerable:!0,get:function(){return h.checkProperties}}),Object.defineProperty(e,"deepCopy",{enumerable:!0,get:function(){return h.deepCopy}}),Object.defineProperty(e,"defineReadOnly",{enumerable:!0,get:function(){return h.defineReadOnly}}),Object.defineProperty(e,"getStatic",{enumerable:!0,get:function(){return h.getStatic}}),Object.defineProperty(e,"resolveProperties",{enumerable:!0,get:function(){return h.resolveProperties}}),Object.defineProperty(e,"shallowCopy",{enumerable:!0,get:function(){return h.shallowCopy}});var C=a(Dx);e.RLP=C;var w=Mx;Object.defineProperty(e,"computePublicKey",{enumerable:!0,get:function(){return w.computePublicKey}}),Object.defineProperty(e,"recoverPublicKey",{enumerable:!0,get:function(){return w.recoverPublicKey}}),Object.defineProperty(e,"SigningKey",{enumerable:!0,get:function(){return w.SigningKey}});var v=h0;Object.defineProperty(e,"formatBytes32String",{enumerable:!0,get:function(){return v.formatBytes32String}}),Object.defineProperty(e,"nameprep",{enumerable:!0,get:function(){return v.nameprep}}),Object.defineProperty(e,"parseBytes32String",{enumerable:!0,get:function(){return v.parseBytes32String}}),Object.defineProperty(e,"_toEscapedUtf8String",{enumerable:!0,get:function(){return v._toEscapedUtf8String}}),Object.defineProperty(e,"toUtf8Bytes",{enumerable:!0,get:function(){return v.toUtf8Bytes}}),Object.defineProperty(e,"toUtf8CodePoints",{enumerable:!0,get:function(){return v.toUtf8CodePoints}}),Object.defineProperty(e,"toUtf8String",{enumerable:!0,get:function(){return v.toUtf8String}}),Object.defineProperty(e,"Utf8ErrorFuncs",{enumerable:!0,get:function(){return v.Utf8ErrorFuncs}});var m=Rx;Object.defineProperty(e,"accessListify",{enumerable:!0,get:function(){return m.accessListify}}),Object.defineProperty(e,"computeAddress",{enumerable:!0,get:function(){return m.computeAddress}}),Object.defineProperty(e,"parseTransaction",{enumerable:!0,get:function(){return m.parse}}),Object.defineProperty(e,"recoverAddress",{enumerable:!0,get:function(){return m.recoverAddress}}),Object.defineProperty(e,"serializeTransaction",{enumerable:!0,get:function(){return m.serialize}}),Object.defineProperty(e,"TransactionTypes",{enumerable:!0,get:function(){return m.TransactionTypes}});var _=$x;Object.defineProperty(e,"commify",{enumerable:!0,get:function(){return _.commify}}),Object.defineProperty(e,"formatEther",{enumerable:!0,get:function(){return _.formatEther}}),Object.defineProperty(e,"parseEther",{enumerable:!0,get:function(){return _.parseEther}}),Object.defineProperty(e,"formatUnits",{enumerable:!0,get:function(){return _.formatUnits}}),Object.defineProperty(e,"parseUnits",{enumerable:!0,get:function(){return _.parseUnits}});var D=Jx;Object.defineProperty(e,"verifyMessage",{enumerable:!0,get:function(){return D.verifyMessage}}),Object.defineProperty(e,"verifyTypedData",{enumerable:!0,get:function(){return D.verifyTypedData}});var F=qx;Object.defineProperty(e,"_fetchData",{enumerable:!0,get:function(){return F._fetchData}}),Object.defineProperty(e,"fetchJson",{enumerable:!0,get:function(){return F.fetchJson}}),Object.defineProperty(e,"poll",{enumerable:!0,get:function(){return F.poll}});var G=l0;Object.defineProperty(e,"SupportedAlgorithm",{enumerable:!0,get:function(){return G.SupportedAlgorithm}});var U=h0;Object.defineProperty(e,"UnicodeNormalizationForm",{enumerable:!0,get:function(){return U.UnicodeNormalizationForm}}),Object.defineProperty(e,"Utf8ErrorReason",{enumerable:!0,get:function(){return U.Utf8ErrorReason}})})(St);export{St as u};
