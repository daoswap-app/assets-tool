import{t as i}from"./___vite-browser-external_commonjs-proxy-17b6bc4b.js";import{M as g,g as N,E as ot,a as F,w as M,T as lt}from"./web3-a6b087d2.js";import{E as st}from"./ERC20_abi-801f43f8.js";import{I as Q,p as rt,c as $}from"./index-9f1413dd.js";import{g as ct,h as it}from"./chains-5e4fdd5e.js";import{x as j,r as w,o as dt,a7 as W,aa as ut,y as b,z as mt,J as ft,H as k,I as n,P as m,u as d,A as s,O as u,M as C,L as E}from"./runtime-core.esm-bundler-c80a0204.js";const vt={style:{display:"flex","align-items":"left"}},_t={style:{display:"flex","align-items":"left"}},pt={style:{display:"flex","align-items":"left"}},wt={style:{display:"flex","align-items":"left"}},bt={style:{display:"flex","align-items":"left"}},ht={style:{display:"flex","align-items":"left"}},yt={style:{"margin-left":"10px"}},gt={style:{display:"flex","align-items":"left"}},kt={style:{"margin-left":"3px"}},Ct=j({name:"TransactionsQueue"}),Et=j({...Ct,props:{connectedWallet:{type:Object,default:null},web3:{type:Object,default:null},currentWallet:{type:String,default:""}},setup(J){const t=J,K=new Q(st),q=new Q(g),f=w(!1),T=w([]),S=w(null),D=w(0),O=w(0),V=w(0),x=async()=>{f.value=!0;const r=N(g,t.currentWallet,t.web3);D.value=ot[t.connectedWallet.chainId],O.value=await t.web3.eth.getBlockNumber(),V.value=Math.ceil((O.value-D.value)/F),T.value=[];const a=(await r.methods.getTransactionIds(0).call()).map(async v=>{const o=await r.methods.getTransaction(v).call(),h=await r.methods.getTransactionConfirmationStatus(v,t.connectedWallet.address).call(),B=await t.web3.eth.getChainId();S.value=ct(it(parseInt(B)));let e=1,l="",P="",H=o.to,L=null,z=null;if(o.to.toLowerCase()===t.currentWallet.toLowerCase()){e=2;const c=o.data?q.decodeData(o.data):null;c&&(l=c.method)}else{e=1;const c=o.data?K.decodeData(o.data):null;if(P=S.value.token,L=M(o.value,t.web3),c){const _=lt[B].filter(y=>y.token.toLowerCase()===o.to.toLowerCase());l=c.method,P=_.length>0?_[0].symbol:S.value.token,H=c.inputs[0],L=M(new t.web3.utils.toBN(c.inputs[1].toString()),t.web3),z={to:c.inputs[0],value:M(new t.web3.utils.toBN(c.inputs[1].toString()),t.web3)}}}const R={id:v,destination:H,tokenSymbol:P,value:L,data:z,confirmations:o.confirmations,revokes:o.revokes,executeState:o.state,confirmStatus:h,type:e,methodName:l,events:[]};for(let c=0;c<V.value;c++){const _=D.value+F*c,y=_+(F-1),Y=await r.getPastEvents("TransactionCreated",{filter:{transactionId:v},fromBlock:_,toBlock:y}),Z=await r.getPastEvents("TransactionConfirmed",{filter:{transactionId:v},fromBlock:_,toBlock:y}),tt=await r.getPastEvents("TransactionRevoke",{filter:{transactionId:v},fromBlock:_,toBlock:y}),A=Y.concat(Z,tt);if(A.length>0){const et=A.map(async p=>{const at=await t.web3.eth.getTransaction(p.transactionHash),nt={eventName:p.event,...p.returnValues,transactionHash:p.transactionHash,blockNumber:p.blockNumber,from:at.from,createTime:rt(p.returnValues.createTime)};R.events.push(nt)});await Promise.all(et),R.events.sort($("blockNumber"))}}T.value.push(R)});await Promise.all(a),T.value.sort($("id")),f.value=!1};dt(()=>{t.connectedWallet&&t.web3&&t.currentWallet&&x()});const G=r=>{f.value=!0,N(g,t.currentWallet,t.web3).methods.confirmTransaction(r.id).send({from:t.connectedWallet.address}).then(async()=>{await x()}).catch(a=>{console.error(a)}).finally(()=>{f.value=!1})},U=r=>{f.value=!0,N(g,t.currentWallet,t.web3).methods.executeTransaction(r.id).send({from:t.connectedWallet.address}).then(async()=>{await x()}).catch(a=>{console.error(a)}).finally(()=>{f.value=!1})},X=r=>{f.value=!0,N(g,t.currentWallet,t.web3).methods.revokeTransaction(r.id).send({from:t.connectedWallet.address}).then(async()=>{await x()}).catch(a=>{console.error(a)}).finally(()=>{f.value=!1})};return(r,I)=>{const a=W("el-table-column"),v=W("el-table"),o=W("el-tag"),h=W("el-button"),B=ut("loading");return b(),mt("div",null,[ft((b(),k(v,{data:T.value,style:{width:"100%"}},{default:n(()=>[m(a,{type:"expand"},{default:n(e=>[m(v,{data:e.row.events,style:{width:"100%"}},{default:n(()=>[m(a,{label:d(i)("transaction.eventName")},{default:n(l=>[s("div",vt,[s("span",null,u(l.row.eventName),1)])]),_:1},8,["label"]),m(a,{label:d(i)("transaction.eventFrom")},{default:n(l=>[s("div",_t,[s("span",null,u(l.row.from),1)])]),_:1},8,["label"]),m(a,{label:d(i)("transaction.eventTransactionHash")},{default:n(l=>[s("div",pt,[s("span",null,u(l.row.transactionHash),1)])]),_:1},8,["label"]),m(a,{label:d(i)("transaction.eventCreateTime")},{default:n(l=>[s("div",wt,[s("span",null,u(l.row.createTime),1)])]),_:1},8,["label"])]),_:2},1032,["data"])]),_:1}),m(a,{label:d(i)("transaction.type")},{default:n(e=>[s("div",bt,[e.row.type==1?(b(),k(o,{key:0,type:"success"},{default:n(()=>[C(u(d(i)("transaction."+e.row.methodName)),1)]),_:2},1024)):E("",!0),e.row.type==2?(b(),k(o,{key:1,type:"warning"},{default:n(()=>[C(u(d(i)("transaction."+e.row.methodName)),1)]),_:2},1024)):E("",!0)])]),_:1},8,["label"]),m(a,{label:d(i)("transaction.destination")},{default:n(e=>[s("div",ht,[s("span",yt,u(e.row.destination),1)])]),_:1},8,["label"]),m(a,{label:d(i)("transaction.value")},{default:n(e=>[s("div",gt,[s("span",null,u(e.row.value),1),s("span",kt,u(e.row.tokenSymbol),1)])]),_:1},8,["label"]),m(a,{label:d(i)("assets.operation")},{default:n(e=>[e.row.confirmStatus?E("",!0):(b(),k(h,{key:0,type:"primary",size:"small",onClick:l=>G(e.row)},{default:n(()=>[C(u(d(i)("transaction.btnConfirm")),1)]),_:2},1032,["onClick"])),m(h,{type:"primary",size:"small",onClick:l=>U(e.row)},{default:n(()=>[C(u(d(i)("transaction.btnExecute")),1)]),_:2},1032,["onClick"]),e.row.confirmStatus?E("",!0):(b(),k(h,{key:1,type:"danger",size:"small",onClick:l=>X(e.row)},{default:n(()=>[C(u(d(i)("transaction.btnRevoke")),1)]),_:2},1032,["onClick"]))]),_:1},8,["label"])]),_:1},8,["data"])),[[B,f.value]])])}}});export{Et as _};
